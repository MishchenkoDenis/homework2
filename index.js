// "кот" > "код" = true Сравнивается по символьно, у буквы Т выше код чем у буквы Д
// "2" + 2 * "2" = 24  1-операция 2 * "2" (приравнивается к типу число происходит умножение)Б 2- операция конкатенация
// undefined == null = true применяет приведение типов. 
//undefined != null  = false применяет приведение типов. 
//null == 0 false согласно правилам приведения типов в JavaScript, null не приводится к числу, и оно не равно нулю
//2 > "3"  false приведение типов
//null - false + true  результат 1 . 0-0+1
//1 / "l" NaN деление числа на строку недопустимо
//"2" * "3" результат 6 преобразует переменные в числа
//4 + 5 + "O" строка 9О сложение и конкатенация
// "l" + 4 + 5  145 строка, конкатенация по 1 действию, 
// "4" - 2  ответ 2, приведение к одному типу
//"4" - "4x" NaN    в JavaScript нельзя вычитать одну строку из другой, если обе строки содержат символы, отличные от цифр.
// “23” == 23 true не строгое равенство приводит к одному типу
//null == false ответ false   null == false становится null == 0, что в итоге дает false, так как null не равно 0
// " -4 "/ 0 + 1  -Infinity  деление на 0
// null + 1 ответ 1 null 0+1
// undefined + null  NaN к незаданному значинию попытка прибавить 0
// 1 === “1” false строгое равенство, сравнение строки и числа
//“2” > 10 false приведение к одному итипу данных, 2 не больше 10
//NaN == undefined  false NaN не равно никакому другому значению